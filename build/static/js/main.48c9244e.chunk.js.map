{"version":3,"sources":["components/Column/Column.module.scss","containers/Layout/Layout.module.scss","containers/CreateForm/CreateForm.module.scss","components/Button/Button.module.scss","components/Cart/Cart.module.scss","components/Button/Button.jsx","icons.js","containers/CreateForm/CreateForm.jsx","components/Cart/Cart.jsx","utils.js","store.js","components/Column/Column.jsx","containers/Layout/Layout.jsx","index.js"],"names":["module","exports","Button","text","level","size","cover","icon","rest","classNames","cn","styles","className","Button__icon","SvgSprite","xmlns","xlinkHref","style","position","width","height","id","viewBox","fillRule","d","fill","genIcon","display","IconPlus","props","IconClose","CreateForm","inputRef","React","createRef","formRef","onSubmit","e","preventDefault","value","state","setState","current","focus","onChange","target","onFocus","document","addEventListener","handleKeypress","onBlur","removeEventListener","submitOnBlur","checkOutsideClick","contains","key","focusByInput","inputHtml","autoSize","setSelectionRange","length","closeForm","onCloseForm","defaultValue","this","inputTag","submitBtnText","placeholder","disableActions","headindStyle","inputClassNames","Input","ref","createElement","CreateForm__actions","type","onClick","Component","Cart","observer","cart","useState","isEditing","setIsEditing","newTitle","saveTitle","title","Cart__button","randomInteger","min","max","rand","Math","random","floor","createCustoms","evt","list","element","item","newIndex","oldIndex","parentElement","from","removeNode","node","removeChild","insertNodeAt","parent","newChild","index","refChild","children","insertBefore","Root","draggingColumn","observable","map","Column","action","newCartTitle","column","columns","arrayMove","findIndex","el","push","columnId","find","items","forEach","setIsOpenCreatingCart","AbstractItem","trim","t","rootStore","lorems","count","fetch","then","resp","json","titles","split","pop","closeAllCreatingCartForms","isOpenCreatingCart","splice","store","listRef","onUpdate","customs","moveCart","onAdd","addCart","onRemove","removeCart","onChooseCart","clientWidth","clientHeight","onUnchoose","onStart","onEnd","onCreateCartSubmit","addCartToColumn","setEditing","saveColumnTitle","Sortable","create","group","forceFallback","filter","createFormStyles","ghostClass","cartStyles","fallbackTolerance","onChoose","targetClassNames","Column__header__target","Column__header","Column__list","Column__footer","padding","Layout","openCreating","columnsWrapRef","setIsOpenCreating","onUpdateSort","moveColumns","onCreateColumn","addColumn","handle","stylesColumn","ghost","direction","contentClassNames","Layout__column__content","Layout__column","data-draggable","render","getElementById"],"mappings":"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","file":"static/js/main.48c9244e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column__title\":\"Column_Column__title__3hxRQ\",\"Column__header\":\"Column_Column__header__1TKvw\",\"Column__header__target\":\"Column_Column__header__target__3I8AV\",\"Column__header__target--hide\":\"Column_Column__header__target--hide__1OCDV\",\"Column__list\":\"Column_Column__list__FigH_\",\"Column__footer\":\"Column_Column__footer__sMWS2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3gqqx\",\"Layout__column\":\"Layout_Layout__column__1GcK1\",\"Layout__column__content\":\"Layout_Layout__column__content__2LRLk\",\"Layout__column__content--creating\":\"Layout_Layout__column__content--creating__1FD8x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"CreateForm_Input__ZvIx_\",\"Input--headingStyle\":\"CreateForm_Input--headingStyle__5FWEg\",\"CreateForm\":\"CreateForm_CreateForm__2X3DI\",\"CreateForm__actions\":\"CreateForm_CreateForm__actions__2a4hE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2BYYQ\",\"Button--size--big\":\"Button_Button--size--big__1R7pb\",\"Button--cover\":\"Button_Button--cover__2ah8A\",\"Button__icon\":\"Button_Button__icon__2ncaH\",\"Button--lvl--success\":\"Button_Button--lvl--success__1dD51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cart\":\"Cart_Cart__3iCUX\",\"Cart__button\":\"Cart_Cart__button__iU6IR\",\"Cart--ghost\":\"Cart_Cart--ghost__1TWRr\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './Button.module.scss';\n\nconst Button = ({text, level, size, cover, icon, ...rest}) => {\n    const classNames = cn(styles.Button, {\n        [styles['Button--lvl--success']]: level === 'success',\n        [styles['Button--size--big']]: size === 'big',\n        [styles['Button--cover']]: cover,\n    })\n    return (\n        <button className={classNames} {...rest}>\n            {!!icon &&\n                <div className={text ? styles.Button__icon : ''}>\n                    {icon}\n                </div>\n            }\n            {text}\n        </button>\n    )\n}\n\nexport default Button;","import React from 'react';\n\nexport const SvgSprite = () => { // по хорошему генерировать их на ходу, а не вставлять скопом\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xlinkHref=\"http://www.w3.org/1999/xlink\" style={{position: 'absolute', width: 0, height: 0}} id=\"__SVG_SPRITE_NODE__\">\n            <symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 15 15\" id=\"plus\">\n                <path fillRule=\"evenodd\" d=\"M14.1412 6.64122H8.35878V0.858779C8.35878 0.400763 7.95802 0 7.5 0C7.04198 0 6.64122 0.400763 6.64122 0.858779V6.64122H0.858779C0.400763 6.64122 0 7.04198 0 7.5C0 7.95801 0.400763 8.35878 0.858779 8.35878H6.64122V14.1412C6.64122 14.5992 7.04198 15 7.5 15C7.95802 15 8.35878 14.5992 8.35878 14.1412V8.35878H14.1412C14.5992 8.35878 15 7.95801 15 7.5C15 7.04198 14.5992 6.64122 14.1412 6.64122Z\" fill=\"currentColor\"/>\n            </symbol>\n            <symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 15 15\" id=\"close\">\n                <path fillRule=\"evenodd\" d=\"M7.5 6.71875L14.2188 0L15 0.78125L8.28125 7.5L15 14.2188L14.2188 15L7.5 8.28125L0.78125 15L0 14.2188L6.71875 7.5L0 0.78125L0.78125 0L7.5 6.71875Z\" fill=\"currentColor\"/>\n            </symbol>\n        </svg>\n    )\n}\n\nconst genIcon = (id, {width = 15, height = 15}) => {\n    return <svg viewBox=\"0 0 15 15\" width={width} height={height} style={{display: 'block'}}><use xlinkHref={`#${id}`} style={{fill: 'currentcolor'}}></use></svg>;\n}\n\nexport const IconPlus = props => genIcon('plus', props);\nexport const IconClose = props => genIcon('close', props);","import React from 'react';\nimport autoSize from 'autosize';\nimport cn from 'classnames';\nimport Button from '../../components/Button/Button';\nimport {IconClose} from '../../icons';\nimport styles from './CreateForm.module.scss';\n\nclass CreateForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: props.defaultValue || '',\n        }\n    }\n\n    inputRef = React.createRef();\n    formRef = React.createRef();\n\n    onSubmit = e => {\n        if (e) e.preventDefault();\n        const {value} = this.state; \n        if (!value) { // не реагируем на сабмит, если пустое поле, и ставим фокус обратно\n            const inputHtml = this.inputRef.current;\n            inputHtml.focus();\n            return;\n        } else {\n            this.setState({\n                value: '',\n            });\n            this.props.onSubmit(value);\n        }\n    }\n    onChange = e => {\n        this.setState({\n            value: e.target.value,\n        });\n    } \n    onFocus = () => {\n        document.addEventListener('keypress', this.handleKeypress);\n    }\n    onBlur = () => {\n        document.removeEventListener('keypress', this.handleKeypress);\n        if (this.props.submitOnBlur) {\n            this.props.onSubmit(this.state.value);\n        }\n    }\n    checkOutsideClick = e => {\n        if (!this.formRef.current.contains(e.target)) {\n            document.removeEventListener('click', this.checkOutsideClick);\n        }\n    }\n    handleKeypress = e => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.onSubmit();\n        }\n    }\n    focusByInput = () => {\n        const inputHtml = this.inputRef.current;\n        autoSize(inputHtml);\n        inputHtml.focus();\n        inputHtml.setSelectionRange(inputHtml.value.length, inputHtml.value.length);\n    }\n    closeForm = () => {\n        if (this.props.onCloseForm) {\n            this.props.onCloseForm();\n        }\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keypress', this.handleKeypress);\n    }\n    componentDidMount() {\n        this.focusByInput();\n    }\n    render() {\n        const {value} = this.state;\n        const {\n            inputTag,\n            submitBtnText = 'Добавить',\n            placeholder,\n            disableActions,\n            headindStyle,\n        } = this.props;\n        const inputClassNames = cn(styles.Input, {\n            [styles['Input--headingStyle']]: headindStyle,\n        });\n        return (\n            <form onSubmit={this.onSubmit} className={styles.CreateForm} ref={this.formRef}>\n                {React.createElement(\n                    inputTag || 'input', \n                    {\n                        ref: this.inputRef,\n                        className: inputClassNames,\n                        placeholder: placeholder,\n                        value: value,\n                        onChange: this.onChange,\n                        onBlur: this.onBlur,\n                        onFocus: this.onFocus,\n                    }\n                )}\n                {!disableActions &&\n                    <div className={styles.CreateForm__actions}>\n                        <Button\n                            type=\"submit\"\n                            text={submitBtnText}\n                            level='success'\n                        />\n                        <Button\n                            icon={<IconClose />}\n                            onClick={this.closeForm}\n                        />\n                    </div>\n                }\n            </form>\n        )\n    }\n}\n\nexport default CreateForm;","import React, {useState} from 'react';\nimport {observer} from 'mobx-react';\nimport styles from './Cart.module.scss';\nimport CreateForm from '../../containers/CreateForm/CreateForm';\n\nconst Cart = observer(({cart}) => {\n\n    const [isEditing, setIsEditing] = useState(false);\n\n    const saveCartTitle = newTitle => {\n        cart.saveTitle(newTitle);\n        setIsEditing(false);\n    }\n\n    return (isEditing ?\n        <CreateForm\n            inputTag='textarea'\n            onSubmit={saveCartTitle}\n            defaultValue={cart.title}\n            submitOnBlur={true}\n            disableActions={true}\n            submitBtnText='Добавить карточку'\n            placeholder='Введите название карточки'\n        />\n    :\n        <form onSubmit={() => setIsEditing(true)} className={styles.Cart}>\n            <button\n                className={styles.Cart__button}\n                type=\"submit\"\n                onClick={() => setIsEditing(true)}\n            >\n                {cart.title}\n            </button>\n        </form>\n    );\n});\n\nexport default Cart;","export const randomInteger = (min, max) => {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport const createCustoms = (evt, list) => ({\r\n    element: evt.item,\r\n    newIndex: evt.newIndex,\r\n    oldIndex: evt.oldIndex,\r\n    parentElement: evt.from,\r\n    item: list[evt.oldIndex],\r\n})\r\n\r\nexport function removeNode(node: HTMLElement) {\r\n    if (node.parentElement !== null) node.parentElement.removeChild(node);\r\n}\r\n\r\nexport function insertNodeAt(parent: HTMLElement, newChild: HTMLElement, index: number) {\r\n    const refChild = parent.children[index] || null;\r\n    parent.insertBefore(newChild, refChild);\r\n}","import { observable, action } from \"mobx\"\r\nimport arrayMove from 'array-move';\r\nimport {randomInteger} from './utils';\r\n\r\nlet id = 0;\r\n\r\nclass Root {\r\n\r\n    draggingColumn = null;\r\n\r\n    @observable newCartTitle = ''; // глобавльный заголовок новой карточки, чтоб синхронизировать между колонками в формах\r\n    @observable columns = ['План', 'Оценка', 'Деплой'].map(title => new Column(title, this, 20)); //колонки для примера\r\n\r\n    @action\r\n    setNewCartTitle = (title) => {\r\n        this.newCartTitle = title;\r\n    }\r\n\r\n    @action\r\n    moveColumns = (column, newIndex) => {\r\n        this.columns = arrayMove(this.columns, this.columns.findIndex(el => el === column), newIndex);\r\n    };\r\n\r\n    @action\r\n    addColumn = title => {\r\n        this.columns.push(new Column(title, this));\r\n    };\r\n    @action\r\n    addCartToColumn = (title, columnId) => {\r\n        if (title) { // не добавляем пустые ячейки\r\n            const targetColumn = this.columns.find(({id}) => id === columnId);\r\n            targetColumn.items.push(new Cart(title));\r\n            this.newCartTitle = '';\r\n            // стучим в апи\r\n        }\r\n    };\r\n\r\n    @action\r\n    closeAllCreatingCartForms = () => {\r\n        this.columns.forEach(column => column.setIsOpenCreatingCart(false));\r\n    }\r\n}\r\n\r\nclass AbstractItem {\r\n    id = id++;\r\n    @observable title;\r\n\r\n    constructor(title) {\r\n        this.title = title.trim();\r\n    }\r\n\r\n    @action\r\n    saveTitle = title => {\r\n        const t = title.trim();\r\n        if (t && t !== this.title) { // чекаем что новый заголовок не пустой и другой\r\n            this.title = t;\r\n            // стучим в апи\r\n        }\r\n    }\r\n}\r\n\r\nclass Column extends AbstractItem {\r\n\r\n    @observable isOpenCreatingCart = false;\r\n    @observable items = [];\r\n    constructor(title, rootStore, lorems = 0) {\r\n        super(title);\r\n        this.rootStore = rootStore;\r\n        if (lorems) { // добавляем фальшивые таски для примера\r\n            const count = randomInteger(2, lorems);\r\n            fetch(`https://fish-text.ru/get?type=title&number=${count}`) // тут просто для примера данных грузу рыба-заголовки\r\n                .then(resp => resp.json())\r\n                .then(({text}) => {\r\n                    const titles = text.split('\\\\n\\\\n');\r\n                    titles.pop();\r\n                    this.items = titles.map(title => new Cart(title));\r\n                })\r\n        } \r\n    };\r\n\r\n    @action \r\n    setIsOpenCreatingCart = state => {\r\n        if (state) {\r\n            this.rootStore.closeAllCreatingCartForms();\r\n        }\r\n        this.isOpenCreatingCart = state;\r\n    }\r\n\r\n    @action\r\n    moveCart = (cart, newIndex) => {\r\n        this.items = arrayMove(this.items, this.items.findIndex(el => el === cart), newIndex);\r\n    };\r\n\r\n    @action\r\n    addCart = (index, cart) => {\r\n        this.items.splice(index, 0, cart);\r\n    }\r\n\r\n    @action\r\n    removeCart = index => {\r\n        this.items.splice(index, 1);\r\n    }\r\n}\r\n\r\nclass Cart extends AbstractItem {\r\n    @observable selected = false;\r\n}\r\n\r\nexport const store = new Root();\r\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport cn from 'classnames';\nimport styles from './Column.module.scss';\nimport createFormStyles from '../../containers/CreateForm/CreateForm.module.scss';\nimport cartStyles from '../Cart/Cart.module.scss';\nimport Cart from '../Cart/Cart';\nimport Button from '../Button/Button';\nimport CreateForm from '../../containers/CreateForm/CreateForm';\nimport Sortable from 'sortablejs';\nimport {\n    createCustoms,\n    removeNode,\n    insertNodeAt,\n} from '../../utils';\nimport {IconPlus} from '../../icons';\nimport {store} from '../../store';\n\n@observer\nclass Column extends React.Component { \n\n    listRef = React.createRef();\n    state = {\n        isEditing: false,\n    }\n\n    onUpdate = evt => { // вызывается, если перемещаем елемент внутри своего-же списка\n        const {items} = this.props.column;\n        const customs = createCustoms(evt, items);\n\n        removeNode(customs.element);\n        insertNodeAt(customs.parentElement, customs.element, customs.oldIndex);\n        this.props.column.moveCart(customs.item, customs.newIndex)\n    }\n\n    onAdd = evt => { // добавляем элемент в новый список\n        const {items} = store.draggingColumn.props.column;\n        const customs = createCustoms(evt, items);\n\n        removeNode(customs.element);\n        this.props.column.addCart(customs.newIndex, customs.item);\n\n    }\n\n    onRemove = evt => { // удаляем из предыдущего списка\n        const {items, removeCart} = this.props.column;\n        const customs = createCustoms(evt, items);\n        \n        insertNodeAt(customs.parentElement, customs.element, customs.oldIndex);\n        removeCart(customs.oldIndex);\n    }\n\n    onChooseCart = evt => {\n        evt.item.style.width = evt.item.clientWidth + 'px';\n        evt.item.style.height = evt.item.clientHeight + 'px';\n    }\n    onUnchoose = evt => {\n        evt.item.style.width = 'auto';\n        evt.item.style.height = 'auto';\n    }\n\n    onStart = (evt) => {\n        store.draggingColumn = this;\n    }\n\n    onEnd = (evt) => {\n        store.draggingColumn = null;\n    }\n\n    onCreateCartSubmit = title => {\n        store.addCartToColumn(title, this.props.column.id);\n    }\n\n    setEditing = () => {\n        this.setState({\n            isEditing: true,\n        })\n    }\n\n    saveColumnTitle = newTitle => {\n        this.props.column.saveTitle(newTitle);\n        this.setState({\n            isEditing: false,\n        })\n    }\n\n    componentDidMount() {\n        Sortable.create(this.listRef.current, {\n            group: \"carts\",\n            forceFallback: true,\n            filter: `.${createFormStyles.CreateForm}`,\n            ghostClass: cartStyles['Cart--ghost'],\n            fallbackTolerance: 10,\n            onStart: this.onStart,\n            onEnd: this.onEnd,\n            onAdd: this.onAdd,\n            onRemove: this.onRemove,\n            onUpdate: this.onUpdate,\n            onChoose: this.onChooseCart,\n            onUnchoose: this.onUnchoose,\n        });\n    }\n    \n    render(){\n        const {title, items, isOpenCreatingCart, setIsOpenCreatingCart} = this.props.column;\n        const {isEditing} = this.state;\n\n        const targetClassNames = cn(styles.Column__header__target, {\n            [styles['Column__header__target--hide']]: isEditing\n        });\n\n        return (\n            <>\n                <div className={styles.Column__header}>\n                    <button className={targetClassNames} onClick={this.setEditing}/>\n                    {isEditing ?\n                        <CreateForm\n                            onSubmit={this.saveColumnTitle}\n                            defaultValue={title}\n                            submitOnBlur={true}\n                            disableActions={true}\n                            headindStyle={true}\n                        />\n                    :\n                        <h2>{title}</h2>\n                    }\n                </div>\n                <div className={styles.Column__list} ref={this.listRef}>\n                    {items && items.map(item =>\n                        <Cart cart={item} key={item.id}/>\n                    )}\n                    {!!isOpenCreatingCart &&\n                        <CreateForm\n                            inputTag='textarea'\n                            onSubmit={this.onCreateCartSubmit}\n                            defaultValue={store.newCartTitle}\n                            onCloseForm={() => setIsOpenCreatingCart(false)}\n                            submitBtnText='Добавить карточку'\n                            placeholder='Введите название карточки'\n                        />\n                    }\n                </div>\n                {!isOpenCreatingCart &&\n                    <div className={styles.Column__footer}>\n                        <Button\n                            style={{padding: '12px'}}\n                            icon={<IconPlus />}\n                            size='big'\n                            cover\n                            text={'Добавить еще одну карточку'}\n                            onClick={() => setIsOpenCreatingCart(true)}\n                        />\n                    </div>\n                }\n            </>\n        )\n    }\n}\n\nexport default Column;","import React from 'react';\nimport cn from 'classnames';\nimport {observer} from 'mobx-react';\nimport styles from './Layout.module.scss';\nimport stylesColumn from '../../components/Column/Column.module.scss';\nimport Column from '../../components/Column/Column';\nimport Button from '../../components/Button/Button';\nimport Sortable from 'sortablejs';\nimport {store} from '../../store';\nimport CreateForm from '../CreateForm/CreateForm';\nimport {\n    createCustoms,\n    removeNode,\n    insertNodeAt,\n} from '../../utils';\nimport {SvgSprite, IconPlus} from '../../icons';\n\n@observer\nclass Layout extends React.Component {\n\n    state = {\n        openCreating: false,\n    }\n    columnsWrapRef = React.createRef();\n\n    setIsOpenCreating = state => {\n        this.setState({\n            openCreating: state,\n        })\n    }\n\n    onUpdateSort = evt => {\n        const customs = createCustoms(evt, store.columns);\n\n        removeNode(customs.element);\n        insertNodeAt(customs.parentElement, customs.element, customs.oldIndex);\n        store.moveColumns(customs.item, customs.newIndex)\n    }\n\n    onCreateColumn = title => {\n        store.addColumn(title);\n        this.setState({\n            openCreating: false,\n        })\n    }\n    \n    componentDidMount() {\n \n        Sortable.create(this.columnsWrapRef.current, {\n            handle: `.${stylesColumn.Column__header}`,\n            forceFallback: true,\n            ghostClass: stylesColumn.ghost,\n            onUpdate: this.onUpdateSort,\n            fallbackTolerance: 10,\n            direction: 'horizontal',\n        });\n    }\n    render() {\n        const {openCreating} = this.state;\n\n        const contentClassNames = cn(styles.Layout__column__content, {\n            [styles['Layout__column__content--creating']]: openCreating,\n        })\n\n        return (\n            <div className={styles.Layout} ref={this.columnsWrapRef}>\n                {store.columns && store.columns.map(column =>\n                    <div className={styles.Layout__column} key={column.id}>\n                        <div className={styles.Layout__column__content}>\n                            <Column column={column}/>\n                        </div>\n                    </div>\n                )}\n                <div className={`${styles.Layout__column} ${styles['Layout__column--dragIgnore']}`} data-draggable={false}>\n                    <div className={contentClassNames}>\n                        {openCreating ?\n                            <CreateForm\n                                onSubmit={this.onCreateColumn}\n                                onCloseForm={() => this.setIsOpenCreating(false)}\n                                submitBtnText='Добавить колонку'\n                                placeholder='Введите название колонки'\n                            />\n                        :\n                            <Button\n                                style={{padding: '12px'}}\n                                icon={<IconPlus />}\n                                size='big'\n                                cover\n                                text={'Добавить еще одну колонку'}\n                                onClick={() => this.setIsOpenCreating(true)}\n                            />\n                        }   \n                    </div>\n                </div>\n                <SvgSprite />\n            </div>\n        )\n    }\n}\n\nexport default Layout;","import React from 'react';\nimport {render} from 'react-dom';\nimport Layout from './containers/Layout/Layout'; \nimport Column from './components/Column/Column'; \nimport './index.scss';\n\nrender(\n    <Layout>\n        <Column column={null}/>\n    </Layout>,\n    document.getElementById('root')\n);"],"sourceRoot":""}